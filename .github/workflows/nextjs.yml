name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2  # Use the 'v2' version of the action.
        with:
          path: client  # Specify the subdirectory where you want to check out your Next.js project.

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "client/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
          elif [ -f "client/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v2  # Use the 'v2' version of the action.
        with:
          node-version: "16"
          cache: ${{ env.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server-side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
        working-directory: client  # Specify the working directory to the "client" folder.

      - name: Restore cache
        uses: actions/cache@v2  # Use the 'v2' version of the action.
        with:
          path: |
            client/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('client/**/package-lock.json', 'client/**/yarn.lock') }}-${{ hashFiles('client/**.[jt]s', 'client/**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('client/**/package-lock.json', 'client/**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ env.runner }} ${{ env.command }}
      - name: Build with Next.js
        run: ${{ env.runner }} next build
      - name: Static HTML export with Next.js
        run: ${{ env.runner }} next export
      - name: Upload artifact
        uses: actions/upload-artifact@v2  # Use the 'v2' version of the action.
        with:
          path: client/out  # Specify the path to the output directory of your Next.js project.

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2  # Use the 'v2' version of the action.
