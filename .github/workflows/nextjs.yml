name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    working-directory: ./client
jobs:
  build:
    runs-on:
      ubuntu-latest
      # Build job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: client

      - name: Set package manager to bun
        id: set-package-manager-to-bun
        run: |
          echo "manager=bun" >> $GITHUB_ENV
          echo "command=install" >> $GITHUB_ENV
          echo "runner=bunx" >> $GITHUB_ENV

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Pages
        uses: actions/configure-pages@v2
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v1
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.bun
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-

      - name: Install dependencies
        run: |
          ls -l .
          cd client
          ${{ env.manager }} ${{ env.command }}
      - name: Build with Next.js
        run: |
          cd client
          mkdir out
          ${{ env.manager }} next build

      - name: List files in the out folder
        run: |
          ls -l client/out

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: out
          path: client/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
