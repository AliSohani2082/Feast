name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: client

      # - name: Detect package manager
      #   id: detect-package-manager
      #   run: |
      #     if [ -f "client/bun.lockb" ]; then
      #       echo "manager=bun" >> $GITHUB_ENV
      #       echo "command=install" >> $GITHUB_ENV
      #       echo "runner=bunx" >> $GITHUB_ENV
      #     elif [ -f "client/package.json" ]; then
      #       echo "manager=bun" >> $GITHUB_ENV
      #       echo "command=ci" >> $GITHUB_ENV
      #       echo "runner=bunx --no-install" >> $GITHUB_ENV
      #     else
      #       echo "Unable to determine package manager"
      #       exit 1
      #     fi

      - name: Set package manager to bun
        id: set-package-manager-to-bun
        run: |
          echo "manager=bun" >> $GITHUB_ENV
          echo "command=install" >> $GITHUB_ENV
          echo "runner=bunx" >> $GITHUB_ENV

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('client/**/package-lock.json', 'client/**/bun.lockb') }}-${{ hashFiles('client/**.[jt]s', 'client/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('client/**/package-lock.json', 'client/**/bun.lockb') }}-

      - name: Install dependencies
        working-directory: client
        run: |
          cd client
          ${{ env.manager }} ${{ env.command }}

      - name: Build with Next.js
        working-directory: client
        run: |
          cd client
          ${{ env.manager }} next build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: client/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
